; PlatformIO CanAirIO Project Configuration File
; Please visit documentation for the other options
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = TTGO_T7 

[common]
platform = espressif32
framework = arduino
upload_speed = 1500000
monitor_speed = 115200
version  = 0.2.9
revision = 779
target = dev
monitor_filters = time
extra_scripts = pre:prebuild.py
build_flags =
    -D CORE_DEBUG_LEVEL=0
    -D EMOTICONS          ; Big emoticons, text and color visualization
    ; -D FORCE_WATCHDOG   ; Force device to reboot each some time.
    ; -D DEBUG_ESP_WIFI
lib_deps =
    U8g2 @ ^2.28.8
    bblanchon/ArduinoJson @ ^6
    https://github.com/hpsaturn/Influx-Arduino.git
    https://github.com/hpsaturn/esp32FOTA.git
    hpsaturn/CanAirIO Air Quality Sensors Library

[env:release]
platform = espressif32
board = lolin32
framework = ${common.framework}
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D D1MINI=1  ; D1MINI compatible board
upload_protocol = custom

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

# Variant for OTA updates via LAN, for WAN you don't need this.
# TTGO T7 v1.3 mini board (d1mini v2) and Panasonic sensor
[env:TTGO_T7_OTA]
platform = ${common.platform}
board = lolin32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
upload_protocol = espota
upload_port = 'CanAirIO.local' ; or change with IP address
upload_flags =
    --port=3232
    --auth=CanAirIO   ; => set OTA password
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D D1MINI=1  ; D1MINI compatible board

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

# variant for official guide:
# TTGO T7 v1.3 mini board (d1mini v2) and Panasonic sensor
[env:TTGO_T7]
platform = espressif32
board = lolin32
framework = ${common.framework}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.lib_deps}
monitor_filters = ${common.monitor_filters}
build_flags =
    ${common.build_flags}
    -D D1MINI=1  ; D1MINI compatible board

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

#######################################
# Other boards supported:
#######################################

# variant for old CanAirIO device v1.0 
[env:WEMOSOLED]
platform = espressif32
board = lolin32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D WEMOSOLED=1

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

[env:HELTEC]
platform = espressif32
board = lolin32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D HELTEC=1

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

[env:TTGO_TQ]
platform = espressif32
board = lolin32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D TTGO_TQ=1

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv

[env:ESP32DEVKIT]
platform = espressif32
board = lolin32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.lib_deps}
build_flags =
    ${common.build_flags}
    -D ESP32DEVKIT=1

extra_scripts = ${common.extra_scripts}
# Repartition esp32 for more space (wifi/bt) 
board_build.partitions = min_spiffs.csv
